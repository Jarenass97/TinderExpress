/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es;

import auxiliar.Constantes;
import java.io.IOException;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import object.*;

/**
 *
 * @author jorge
 */
public class frmPrincipalAdministrador extends javax.swing.JFrame {

    /**
     * Creates new form frmPrincipalAdministrador
     */
    private Usuario usuario;
    private Escritor e;
    private Socket servidor;

    public frmPrincipalAdministrador(Usuario usuario, Escritor escritor, Socket servidor) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/logo.png")).getImage());
        setLocationRelativeTo(null);
        this.usuario = usuario;
        this.e = escritor;
        this.servidor = servidor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnChangeRol = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAddUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tinder Express - ADMINISTRADOR");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Correo", "Fecha de nacimiento", "Rol"
            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jLabel1.setText("Usuarios registrados en la aplicación");

        btnChangeRol.setText("Cambiar Rol");
        btnChangeRol.setEnabled(false);
        btnChangeRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeRolActionPerformed(evt);
            }
        });

        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar Usuario");
        btnDelete.setActionCommand("");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAddUser.setText("Añadir Usuario");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChangeRol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSalir))
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(btnAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeRol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            e.escribir(false);
            servidor.close();
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        DefaultTableModel tm = (DefaultTableModel) tblUsuarios.getModel();
        String fila = String.valueOf(tm.getValueAt(tblUsuarios.getSelectedRow(), 0));
        if (!fila.equals("null")) {
            btnChangeRol.setEnabled(true);
            btnDelete.setEnabled(true);

        } else {
            btnChangeRol.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnChangeRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeRolActionPerformed
        try {
            DefaultTableModel tm = (DefaultTableModel) tblUsuarios.getModel();
            String rol = String.valueOf(tm.getValueAt(tblUsuarios.getSelectedRow(), 3));
            String email = String.valueOf(tm.getValueAt(tblUsuarios.getSelectedRow(), 1));
            int accion;
            if (rol.equals("Administrador")) {
                accion = Constantes.QUITAR_PERMISOS;
            } else {
                accion = Constantes.DAR_PERMISOS;
            }
            e.escribir(true);
            e.escribir(accion);
            e.escribir(email);
            JOptionPane.showMessageDialog(null, "Permisos cambiados");
            cargarUsuarios();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnChangeRolActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            frmLogin frm = new frmLogin();
            frm.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            DefaultTableModel tm = (DefaultTableModel) tblUsuarios.getModel();
            String email = String.valueOf(tm.getValueAt(tblUsuarios.getSelectedRow(), 1));
            e.escribir(true);
            e.escribir(Constantes.DEL_USER);
            e.escribir(email);
            JOptionPane.showMessageDialog(null, "Usuario eliminado");
            cargarUsuarios();
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        try {
            frmRegistro frm = new frmRegistro(this, servidor, e);
            this.setVisible(false);
            frm.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(frmPrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        cargarUsuarios();
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnChangeRol;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsuarios;
    // End of variables declaration//GEN-END:variables

    private void cargarUsuarios() {
        try {
            DefaultTableModel tm = (DefaultTableModel) tblUsuarios.getModel();
            e.escribir(true);
            e.escribir(Constantes.CARGAR_USUARIOS);
            int fila = 0;
            limpiarTabla();
            while ((boolean) e.leer()) {
                Usuario u = (Usuario) e.leer();
                tm.addRow(new Object[4]);
                addUser(u, fila);
                fila++;
            }
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addUser(Usuario usuario, int fila) {
        tblUsuarios.setValueAt(usuario.getNombre(), fila, 0);
        tblUsuarios.setValueAt(usuario.getEmail(), fila, 1);
        tblUsuarios.setValueAt(usuario.getFechaNac(), fila, 2);
        String rol = "";
        if (usuario.getRol() == 1) {
            rol = "Administrador";
        } else {
            rol = "Usuario";
        }
        tblUsuarios.setValueAt(rol, fila, 3);
    }

    private void limpiarTabla() {
        DefaultTableModel tb = (DefaultTableModel) tblUsuarios.getModel();
        int a = tblUsuarios.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
    }
}
